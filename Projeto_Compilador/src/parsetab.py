
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ARRAY ASSIGNMENT BEGIN BOOLEAN CHAR COLON COMMA COMMENT DIV DIVISION DO DOT DOTDOT DOWNTO ELSE END EQ FOR GT GTE IDENTIFIER IF INTEGER LBRACKET LPAREN LT LTE MINUS MOD NEQ NOT OF OR PLUS PROGRAM RBRACKET READLN REAL RPAREN SEMICOLON STRING TBOOLEAN TCHAR THEN TIMES TINTEGER TO TREAL TSTRING VAR WHILE WRITE WRITELNProgram : Header SEMICOLON Block DOTHeader : PROGRAM IDENTIFIERBlock : Var_declaration_block Code_blockVar_declaration_block : VAR Var_list\n                             | Var_list : Var_declaration Var_list\n                | Var_declarationVar_declaration : Identifier_list COLON Type SEMICOLONIdentifier_list : IDENTIFIER COMMA Identifier_list\n                       | IDENTIFIERType : TINTEGER\n            | TREAL\n            | TSTRING\n            | TCHAR\n            | TBOOLEAN\n            | Array_typeArray_type : ARRAY LBRACKET integer DOTDOT integer RBRACKET OF TypeCode_block : BEGIN Statements ENDStatements : Statement SEMICOLON Statements\n                  | StatementStatement : Assignment_statement\n                 | Code_block\n                 | If_statement\n                 | While_statement\n                 | For_statement\n                 | Write_statement\n                 | Readln_statement\n                 | If_statement : IF Expression THEN Statement ELSE Statement\n                    | IF Expression THEN StatementWhile_statement : WHILE Expression DO StatementFor_statement : FOR Assignment_statement TO Expression DO Statement\n                     | FOR Assignment_statement DOWNTO Expression DO StatementWrite_statement : WRITE LPAREN Param_list RPAREN\n                       | WRITELN LPAREN Param_list RPARENParam_list : Param_list COMMA Param\n                  | ParamParam : ExpressionReadln_statement : READLN LPAREN IDENTIFIER RPAREN\n                        | READLN LPAREN IDENTIFIER LBRACKET Expression RBRACKET RPARENAssignment_statement : IDENTIFIER ASSIGNMENT Expression\n                           | IDENTIFIER LBRACKET Expression RBRACKET ASSIGNMENT ExpressionExpression : Expression And_or Expression_m\n                  | Expression_mExpression_m : Expression_s\n                    | Expression_m Sign Expression_sExpression_s : Element\n                    | Expression_s Psign ElementAnd_or : AND\n              | ORPsign : TIMES\n             | DIVISIONSign : PLUS\n            | MINUS\n            | DIV\n            | MOD\n            | EQ\n            | NEQ\n            | LT\n            | LTE\n            | GT\n            | GTEElement : IDENTIFIER\n               | IDENTIFIER LBRACKET Expression RBRACKET\n               | real\n               | integer\n               | string\n               | char\n               | boolean\n               | LPAREN Expression RPAREN\n               | NOT Elementreal : REALinteger : INTEGERstring : STRINGchar : CHARboolean : BOOLEAN'
    
_lr_action_items = {'PROGRAM':([0,],[3,]),'$end':([1,9,],[0,-1,]),'SEMICOLON':([2,5,11,17,18,19,20,21,22,23,24,35,36,40,41,42,43,44,45,46,47,48,51,52,53,54,55,61,62,63,64,65,66,67,71,73,93,94,105,106,107,108,110,111,114,116,117,121,122,123,124,128,129,130,131,134,137,],[4,-2,-28,36,-21,-22,-23,-24,-25,-26,-27,-18,-28,-44,-45,-47,-63,-65,-66,-67,-68,-69,-72,-73,-74,-75,-76,102,-11,-12,-13,-14,-15,-16,-41,-28,-71,-28,-30,-43,-46,-48,-70,-31,-34,-35,-39,-28,-64,-28,-28,-42,-29,-32,-33,-40,-17,]),'IDENTIFIER':([3,8,11,13,26,27,28,34,36,37,38,49,50,58,59,60,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,94,95,96,102,115,118,120,121,123,124,],[5,15,25,15,43,43,25,15,25,43,43,43,43,43,43,101,25,43,-49,-50,43,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,43,-51,-52,43,25,43,43,-8,43,43,43,25,25,25,]),'VAR':([4,],[8,]),'BEGIN':([4,7,11,12,13,32,36,73,94,102,121,123,124,],[-5,11,11,-4,-7,-6,11,11,11,-8,11,11,11,]),'DOT':([6,10,35,],[9,-3,-18,]),'END':([11,16,17,18,19,20,21,22,23,24,35,36,40,41,42,43,44,45,46,47,48,51,52,53,54,55,70,71,73,93,94,105,106,107,108,110,111,114,116,117,121,122,123,124,128,129,130,131,134,],[-28,35,-20,-21,-22,-23,-24,-25,-26,-27,-18,-28,-44,-45,-47,-63,-65,-66,-67,-68,-69,-72,-73,-74,-75,-76,-19,-41,-28,-71,-28,-30,-43,-46,-48,-70,-31,-34,-35,-39,-28,-64,-28,-28,-42,-29,-32,-33,-40,]),'IF':([11,36,73,94,121,123,124,],[26,26,26,26,26,26,26,]),'WHILE':([11,36,73,94,121,123,124,],[27,27,27,27,27,27,27,]),'FOR':([11,36,73,94,121,123,124,],[28,28,28,28,28,28,28,]),'WRITE':([11,36,73,94,121,123,124,],[29,29,29,29,29,29,29,]),'WRITELN':([11,36,73,94,121,123,124,],[30,30,30,30,30,30,30,]),'READLN':([11,36,73,94,121,123,124,],[31,31,31,31,31,31,31,]),'COLON':([14,15,69,],[33,-10,-9,]),'COMMA':([15,40,41,42,43,44,45,46,47,48,51,52,53,54,55,93,97,98,99,100,106,107,108,110,122,125,],[34,-44,-45,-47,-63,-65,-66,-67,-68,-69,-72,-73,-74,-75,-76,-71,115,-37,-38,115,-43,-46,-48,-70,-64,-36,]),'ELSE':([18,19,20,21,22,23,24,35,40,41,42,43,44,45,46,47,48,51,52,53,54,55,71,73,93,94,105,106,107,108,110,111,114,116,117,121,122,123,124,128,129,130,131,134,],[-21,-22,-23,-24,-25,-26,-27,-18,-44,-45,-47,-63,-65,-66,-67,-68,-69,-72,-73,-74,-75,-76,-41,-28,-71,-28,121,-43,-46,-48,-70,-31,-34,-35,-39,-28,-64,-28,-28,-42,-29,-32,-33,-40,]),'ASSIGNMENT':([25,104,],[37,120,]),'LBRACKET':([25,43,68,101,],[38,91,103,118,]),'LPAREN':([26,27,29,30,31,37,38,49,50,58,59,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,95,96,115,118,120,],[49,49,58,59,60,49,49,49,49,49,49,49,-49,-50,49,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,49,-51,-52,49,49,49,49,49,49,]),'NOT':([26,27,37,38,49,50,58,59,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,95,96,115,118,120,],[50,50,50,50,50,50,50,50,50,-49,-50,50,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,50,-51,-52,50,50,50,50,50,50,]),'REAL':([26,27,37,38,49,50,58,59,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,95,96,115,118,120,],[51,51,51,51,51,51,51,51,51,-49,-50,51,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,51,-51,-52,51,51,51,51,51,51,]),'INTEGER':([26,27,37,38,49,50,58,59,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,95,96,103,115,118,120,127,],[52,52,52,52,52,52,52,52,52,-49,-50,52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,52,-51,-52,52,52,52,52,52,52,52,52,]),'STRING':([26,27,37,38,49,50,58,59,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,95,96,115,118,120,],[53,53,53,53,53,53,53,53,53,-49,-50,53,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,53,-51,-52,53,53,53,53,53,53,]),'CHAR':([26,27,37,38,49,50,58,59,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,95,96,115,118,120,],[54,54,54,54,54,54,54,54,54,-49,-50,54,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,54,-51,-52,54,54,54,54,54,54,]),'BOOLEAN':([26,27,37,38,49,50,58,59,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,95,96,115,118,120,],[55,55,55,55,55,55,55,55,55,-49,-50,55,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,55,-51,-52,55,55,55,55,55,55,]),'TINTEGER':([33,136,],[62,62,]),'TREAL':([33,136,],[63,63,]),'TSTRING':([33,136,],[64,64,]),'TCHAR':([33,136,],[65,65,]),'TBOOLEAN':([33,136,],[66,66,]),'ARRAY':([33,136,],[68,68,]),'THEN':([39,40,41,42,43,44,45,46,47,48,51,52,53,54,55,93,106,107,108,110,122,],[73,-44,-45,-47,-63,-65,-66,-67,-68,-69,-72,-73,-74,-75,-76,-71,-43,-46,-48,-70,-64,]),'AND':([39,40,41,42,43,44,45,46,47,48,51,52,53,54,55,56,71,72,92,93,99,106,107,108,109,110,112,113,122,126,128,],[75,-44,-45,-47,-63,-65,-66,-67,-68,-69,-72,-73,-74,-75,-76,75,75,75,75,-71,75,-43,-46,-48,75,-70,75,75,-64,75,75,]),'OR':([39,40,41,42,43,44,45,46,47,48,51,52,53,54,55,56,71,72,92,93,99,106,107,108,109,110,112,113,122,126,128,],[76,-44,-45,-47,-63,-65,-66,-67,-68,-69,-72,-73,-74,-75,-76,76,76,76,76,-71,76,-43,-46,-48,76,-70,76,76,-64,76,76,]),'DO':([40,41,42,43,44,45,46,47,48,51,52,53,54,55,56,93,106,107,108,110,112,113,122,],[-44,-45,-47,-63,-65,-66,-67,-68,-69,-72,-73,-74,-75,-76,94,-71,-43,-46,-48,-70,123,124,-64,]),'TO':([40,41,42,43,44,45,46,47,48,51,52,53,54,55,57,71,93,106,107,108,110,122,128,],[-44,-45,-47,-63,-65,-66,-67,-68,-69,-72,-73,-74,-75,-76,95,-41,-71,-43,-46,-48,-70,-64,-42,]),'DOWNTO':([40,41,42,43,44,45,46,47,48,51,52,53,54,55,57,71,93,106,107,108,110,122,128,],[-44,-45,-47,-63,-65,-66,-67,-68,-69,-72,-73,-74,-75,-76,96,-41,-71,-43,-46,-48,-70,-64,-42,]),'RBRACKET':([40,41,42,43,44,45,46,47,48,51,52,53,54,55,72,93,106,107,108,109,110,122,126,133,],[-44,-45,-47,-63,-65,-66,-67,-68,-69,-72,-73,-74,-75,-76,104,-71,-43,-46,-48,122,-70,-64,132,135,]),'RPAREN':([40,41,42,43,44,45,46,47,48,51,52,53,54,55,92,93,97,98,99,100,101,106,107,108,110,122,125,132,],[-44,-45,-47,-63,-65,-66,-67,-68,-69,-72,-73,-74,-75,-76,110,-71,114,-37,-38,116,117,-43,-46,-48,-70,-64,-36,134,]),'PLUS':([40,41,42,43,44,45,46,47,48,51,52,53,54,55,93,106,107,108,110,122,],[78,-45,-47,-63,-65,-66,-67,-68,-69,-72,-73,-74,-75,-76,-71,78,-46,-48,-70,-64,]),'MINUS':([40,41,42,43,44,45,46,47,48,51,52,53,54,55,93,106,107,108,110,122,],[79,-45,-47,-63,-65,-66,-67,-68,-69,-72,-73,-74,-75,-76,-71,79,-46,-48,-70,-64,]),'DIV':([40,41,42,43,44,45,46,47,48,51,52,53,54,55,93,106,107,108,110,122,],[80,-45,-47,-63,-65,-66,-67,-68,-69,-72,-73,-74,-75,-76,-71,80,-46,-48,-70,-64,]),'MOD':([40,41,42,43,44,45,46,47,48,51,52,53,54,55,93,106,107,108,110,122,],[81,-45,-47,-63,-65,-66,-67,-68,-69,-72,-73,-74,-75,-76,-71,81,-46,-48,-70,-64,]),'EQ':([40,41,42,43,44,45,46,47,48,51,52,53,54,55,93,106,107,108,110,122,],[82,-45,-47,-63,-65,-66,-67,-68,-69,-72,-73,-74,-75,-76,-71,82,-46,-48,-70,-64,]),'NEQ':([40,41,42,43,44,45,46,47,48,51,52,53,54,55,93,106,107,108,110,122,],[83,-45,-47,-63,-65,-66,-67,-68,-69,-72,-73,-74,-75,-76,-71,83,-46,-48,-70,-64,]),'LT':([40,41,42,43,44,45,46,47,48,51,52,53,54,55,93,106,107,108,110,122,],[84,-45,-47,-63,-65,-66,-67,-68,-69,-72,-73,-74,-75,-76,-71,84,-46,-48,-70,-64,]),'LTE':([40,41,42,43,44,45,46,47,48,51,52,53,54,55,93,106,107,108,110,122,],[85,-45,-47,-63,-65,-66,-67,-68,-69,-72,-73,-74,-75,-76,-71,85,-46,-48,-70,-64,]),'GT':([40,41,42,43,44,45,46,47,48,51,52,53,54,55,93,106,107,108,110,122,],[86,-45,-47,-63,-65,-66,-67,-68,-69,-72,-73,-74,-75,-76,-71,86,-46,-48,-70,-64,]),'GTE':([40,41,42,43,44,45,46,47,48,51,52,53,54,55,93,106,107,108,110,122,],[87,-45,-47,-63,-65,-66,-67,-68,-69,-72,-73,-74,-75,-76,-71,87,-46,-48,-70,-64,]),'TIMES':([41,42,43,44,45,46,47,48,51,52,53,54,55,93,107,108,110,122,],[89,-47,-63,-65,-66,-67,-68,-69,-72,-73,-74,-75,-76,-71,89,-48,-70,-64,]),'DIVISION':([41,42,43,44,45,46,47,48,51,52,53,54,55,93,107,108,110,122,],[90,-47,-63,-65,-66,-67,-68,-69,-72,-73,-74,-75,-76,-71,90,-48,-70,-64,]),'DOTDOT':([52,119,],[-73,127,]),'OF':([135,],[136,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'Program':([0,],[1,]),'Header':([0,],[2,]),'Block':([4,],[6,]),'Var_declaration_block':([4,],[7,]),'Code_block':([7,11,36,73,94,121,123,124,],[10,19,19,19,19,19,19,19,]),'Var_list':([8,13,],[12,32,]),'Var_declaration':([8,13,],[13,13,]),'Identifier_list':([8,13,34,],[14,14,69,]),'Statements':([11,36,],[16,70,]),'Statement':([11,36,73,94,121,123,124,],[17,17,105,111,129,130,131,]),'Assignment_statement':([11,28,36,73,94,121,123,124,],[18,57,18,18,18,18,18,18,]),'If_statement':([11,36,73,94,121,123,124,],[20,20,20,20,20,20,20,]),'While_statement':([11,36,73,94,121,123,124,],[21,21,21,21,21,21,21,]),'For_statement':([11,36,73,94,121,123,124,],[22,22,22,22,22,22,22,]),'Write_statement':([11,36,73,94,121,123,124,],[23,23,23,23,23,23,23,]),'Readln_statement':([11,36,73,94,121,123,124,],[24,24,24,24,24,24,24,]),'Expression':([26,27,37,38,49,58,59,91,95,96,115,118,120,],[39,56,71,72,92,99,99,109,112,113,99,126,128,]),'Expression_m':([26,27,37,38,49,58,59,74,91,95,96,115,118,120,],[40,40,40,40,40,40,40,106,40,40,40,40,40,40,]),'Expression_s':([26,27,37,38,49,58,59,74,77,91,95,96,115,118,120,],[41,41,41,41,41,41,41,41,107,41,41,41,41,41,41,]),'Element':([26,27,37,38,49,50,58,59,74,77,88,91,95,96,115,118,120,],[42,42,42,42,42,93,42,42,42,42,108,42,42,42,42,42,42,]),'real':([26,27,37,38,49,50,58,59,74,77,88,91,95,96,115,118,120,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'integer':([26,27,37,38,49,50,58,59,74,77,88,91,95,96,103,115,118,120,127,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,119,45,45,45,133,]),'string':([26,27,37,38,49,50,58,59,74,77,88,91,95,96,115,118,120,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'char':([26,27,37,38,49,50,58,59,74,77,88,91,95,96,115,118,120,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'boolean':([26,27,37,38,49,50,58,59,74,77,88,91,95,96,115,118,120,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'Type':([33,136,],[61,137,]),'Array_type':([33,136,],[67,67,]),'And_or':([39,56,71,72,92,99,109,112,113,126,128,],[74,74,74,74,74,74,74,74,74,74,74,]),'Sign':([40,106,],[77,77,]),'Psign':([41,107,],[88,88,]),'Param_list':([58,59,],[97,100,]),'Param':([58,59,115,],[98,98,125,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> Program","S'",1,None,None,None),
  ('Program -> Header SEMICOLON Block DOT','Program',4,'p_program','yaccer.py',17),
  ('Header -> PROGRAM IDENTIFIER','Header',2,'p_header','yaccer.py',21),
  ('Block -> Var_declaration_block Code_block','Block',2,'p_block','yaccer.py',25),
  ('Var_declaration_block -> VAR Var_list','Var_declaration_block',2,'p_var_declaration_block','yaccer.py',29),
  ('Var_declaration_block -> <empty>','Var_declaration_block',0,'p_var_declaration_block','yaccer.py',30),
  ('Var_list -> Var_declaration Var_list','Var_list',2,'p_var_list','yaccer.py',37),
  ('Var_list -> Var_declaration','Var_list',1,'p_var_list','yaccer.py',38),
  ('Var_declaration -> Identifier_list COLON Type SEMICOLON','Var_declaration',4,'p_var_declaration','yaccer.py',45),
  ('Identifier_list -> IDENTIFIER COMMA Identifier_list','Identifier_list',3,'p_identifier_list','yaccer.py',69),
  ('Identifier_list -> IDENTIFIER','Identifier_list',1,'p_identifier_list','yaccer.py',70),
  ('Type -> TINTEGER','Type',1,'p_type','yaccer.py',86),
  ('Type -> TREAL','Type',1,'p_type','yaccer.py',87),
  ('Type -> TSTRING','Type',1,'p_type','yaccer.py',88),
  ('Type -> TCHAR','Type',1,'p_type','yaccer.py',89),
  ('Type -> TBOOLEAN','Type',1,'p_type','yaccer.py',90),
  ('Type -> Array_type','Type',1,'p_type','yaccer.py',91),
  ('Array_type -> ARRAY LBRACKET integer DOTDOT integer RBRACKET OF Type','Array_type',8,'p_array_type','yaccer.py',95),
  ('Code_block -> BEGIN Statements END','Code_block',3,'p_code_block','yaccer.py',99),
  ('Statements -> Statement SEMICOLON Statements','Statements',3,'p_statements','yaccer.py',103),
  ('Statements -> Statement','Statements',1,'p_statements','yaccer.py',104),
  ('Statement -> Assignment_statement','Statement',1,'p_statement','yaccer.py',111),
  ('Statement -> Code_block','Statement',1,'p_statement','yaccer.py',112),
  ('Statement -> If_statement','Statement',1,'p_statement','yaccer.py',113),
  ('Statement -> While_statement','Statement',1,'p_statement','yaccer.py',114),
  ('Statement -> For_statement','Statement',1,'p_statement','yaccer.py',115),
  ('Statement -> Write_statement','Statement',1,'p_statement','yaccer.py',116),
  ('Statement -> Readln_statement','Statement',1,'p_statement','yaccer.py',117),
  ('Statement -> <empty>','Statement',0,'p_statement','yaccer.py',118),
  ('If_statement -> IF Expression THEN Statement ELSE Statement','If_statement',6,'p_if_statement','yaccer.py',128),
  ('If_statement -> IF Expression THEN Statement','If_statement',4,'p_if_statement','yaccer.py',129),
  ('While_statement -> WHILE Expression DO Statement','While_statement',4,'p_while_statement','yaccer.py',139),
  ('For_statement -> FOR Assignment_statement TO Expression DO Statement','For_statement',6,'p_for_statement','yaccer.py',145),
  ('For_statement -> FOR Assignment_statement DOWNTO Expression DO Statement','For_statement',6,'p_for_statement','yaccer.py',146),
  ('Write_statement -> WRITE LPAREN Param_list RPAREN','Write_statement',4,'p_write_statement','yaccer.py',168),
  ('Write_statement -> WRITELN LPAREN Param_list RPAREN','Write_statement',4,'p_write_statement','yaccer.py',169),
  ('Param_list -> Param_list COMMA Param','Param_list',3,'p_param_list','yaccer.py',186),
  ('Param_list -> Param','Param_list',1,'p_param_list','yaccer.py',187),
  ('Param -> Expression','Param',1,'p_param','yaccer.py',194),
  ('Readln_statement -> READLN LPAREN IDENTIFIER RPAREN','Readln_statement',4,'p_readln_statement','yaccer.py',210),
  ('Readln_statement -> READLN LPAREN IDENTIFIER LBRACKET Expression RBRACKET RPAREN','Readln_statement',7,'p_readln_statement','yaccer.py',211),
  ('Assignment_statement -> IDENTIFIER ASSIGNMENT Expression','Assignment_statement',3,'p_assignment_statement','yaccer.py',227),
  ('Assignment_statement -> IDENTIFIER LBRACKET Expression RBRACKET ASSIGNMENT Expression','Assignment_statement',6,'p_assignment_statement','yaccer.py',228),
  ('Expression -> Expression And_or Expression_m','Expression',3,'p_expression','yaccer.py',245),
  ('Expression -> Expression_m','Expression',1,'p_expression','yaccer.py',246),
  ('Expression_m -> Expression_s','Expression_m',1,'p_expression_m','yaccer.py',254),
  ('Expression_m -> Expression_m Sign Expression_s','Expression_m',3,'p_expression_m','yaccer.py',255),
  ('Expression_s -> Element','Expression_s',1,'p_expression_s','yaccer.py',277),
  ('Expression_s -> Expression_s Psign Element','Expression_s',3,'p_expression_s','yaccer.py',278),
  ('And_or -> AND','And_or',1,'p_and_or','yaccer.py',287),
  ('And_or -> OR','And_or',1,'p_and_or','yaccer.py',288),
  ('Psign -> TIMES','Psign',1,'p_psign','yaccer.py',292),
  ('Psign -> DIVISION','Psign',1,'p_psign','yaccer.py',293),
  ('Sign -> PLUS','Sign',1,'p_sign','yaccer.py',297),
  ('Sign -> MINUS','Sign',1,'p_sign','yaccer.py',298),
  ('Sign -> DIV','Sign',1,'p_sign','yaccer.py',299),
  ('Sign -> MOD','Sign',1,'p_sign','yaccer.py',300),
  ('Sign -> EQ','Sign',1,'p_sign','yaccer.py',301),
  ('Sign -> NEQ','Sign',1,'p_sign','yaccer.py',302),
  ('Sign -> LT','Sign',1,'p_sign','yaccer.py',303),
  ('Sign -> LTE','Sign',1,'p_sign','yaccer.py',304),
  ('Sign -> GT','Sign',1,'p_sign','yaccer.py',305),
  ('Sign -> GTE','Sign',1,'p_sign','yaccer.py',306),
  ('Element -> IDENTIFIER','Element',1,'p_element','yaccer.py',310),
  ('Element -> IDENTIFIER LBRACKET Expression RBRACKET','Element',4,'p_element','yaccer.py',311),
  ('Element -> real','Element',1,'p_element','yaccer.py',312),
  ('Element -> integer','Element',1,'p_element','yaccer.py',313),
  ('Element -> string','Element',1,'p_element','yaccer.py',314),
  ('Element -> char','Element',1,'p_element','yaccer.py',315),
  ('Element -> boolean','Element',1,'p_element','yaccer.py',316),
  ('Element -> LPAREN Expression RPAREN','Element',3,'p_element','yaccer.py',317),
  ('Element -> NOT Element','Element',2,'p_element','yaccer.py',318),
  ('real -> REAL','real',1,'p_real','yaccer.py',345),
  ('integer -> INTEGER','integer',1,'p_integer','yaccer.py',349),
  ('string -> STRING','string',1,'p_string','yaccer.py',353),
  ('char -> CHAR','char',1,'p_char','yaccer.py',357),
  ('boolean -> BOOLEAN','boolean',1,'p_boolean','yaccer.py',361),
]
